{
  "tests": [
    {
      "name": "reverse(@)",
      "selector" : "$[?reverse(@)=='cba']",
      "document" : ["abc", "cba"],
      "result": ["abc"]
    },
    {
      "name": "reverse(reverse(@))",
      "selector" : "$[?reverse(reverse(@))=='cba']",
      "document" : ["abc", "cba"],
      "result": ["cba"]
    },
    {
      "name": "count(siblings(@))",
      "selector" : "$..[?count(siblings(@)) == 1]",
      "document" : {"a":  {"b":  "x", "d":  "x"}},
      "result": ["x", "x"]
    },
    {
      "name": "is_object(@)",
      "selector" : "$[?is_object(@)]",
      "document" : [1, true, {}, [42], "foo", {"a": "b"}],
      "result": [{}, {"a": "b"}]
    },
    {
      "name": "is_array(@)",
      "selector" : "$[?is_array(@)]",
      "document" : [1, true, {}, [42], "foo", {"a": "b"}],
      "result": [[42]]
    },
    {
      "name": "is_string",
      "selector" : "$[?is_string(@)]",
      "document" : [1, true, {}, [42], "foo", {"a": "b"}],
      "result": ["foo"]
    },
    {
      "name": "is_number",
      "selector" : "$[?is_number(@)]",
      "document" : [1, true, {}, [42], 3.14, "foo", {"a": "b"}],
      "result": [1, 3.14]
    },
    {
      "name": "is_boolean",
      "selector" : "$[?is_boolean(@)]",
      "document" : [1, true, {}, [42], "foo", {"a": "b"}, false],
      "result": [true, false]
    },
    {
      "name": "parens in functional args",
      "selector" : "$[?xor((@.b), (@.a))]",
      "document" : [{"a": 0}, {"a": 0, "b": 0}, {"b": 0}, {}],
      "result": [{"a": 0}, {"b": 0}]
    },
    {
      "name": "nodes to logical conversion in function arg",
      "selector" : "$[?xor(@.*, @.*)]",
      "document" : [{"a": 0}, {"a": 0, "b": 0}, {"b": 0}, {}],
      "result": []
    }
  ]
}